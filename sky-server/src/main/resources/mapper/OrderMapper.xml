<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.OrderMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into orders (number,status,user_id,address_book_id,order_time,checkout_time,pay_method,pay_status,
                            amount,remark,phone,address,consignee,
                            estimated_delivery_time,delivery_status,pack_amount,tableware_number,tableware_status)
        values (#{number}, #{status}, #{userId}, #{addressBookId}, #{orderTime}, #{checkoutTime}, #{payMethod},
                #{payStatus}, #{amount}, #{remark}, #{phone}, #{address}, #{consignee},
                #{estimatedDeliveryTime}, #{deliveryStatus}, #{packAmount}, #{tablewareNumber}, #{tablewareStatus})
    </insert>
    <select id="pageQuery" resultType="com.sky.entity.Orders">
        select * from orders
        <where>
            <if test="status != null">
                status = #{status}
            </if>
            <if test="number != null and number != ''">
                and number = #{number}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="beginTime != null">
                and order_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                and order_time &lt;= #{endTime}
            </if>
        </where>
        order by order_time desc
    </select>

    <select id="statistics" resultType="com.sky.vo.OrderStatisticsVO">
        select count(`status` = 2 or null )   as toBeConfirmed ,count(`status` = 3 or null )  as confirmed,
               count(`status` = 4 or null ) as deliveryInProgress
        from orders
    </select>

    <select id="queryTimeOut" resultType="com.sky.entity.Orders">
        select * from orders where  `status` = #{status} and `order_time` &lt; #{time}
    </select>
    <select id="queryByDate" resultType="java.lang.Double">
        SELECT SUM(amount) FROM orders
        <where>
            <if test="begin != null">
                #{begin} &lt; order_time
            </if>
            <if test="end != null">
                and order_time &lt; #{end}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>

    <select id="countOrders" resultType="java.lang.Integer">
        SELECT count(id) FROM orders
        <where>
            <if test="status != null">
                status = #{status}
            </if>
            <if test="begin != null">
                and order_time &gt; #{begin}
            </if>
            <if test="end != null">
                and order_time &lt; #{end}
            </if>

        </where>

    </select>

    <select id="queryGoodsSalesTop10" resultType="com.sky.dto.GoodsSalesDTO">
        SELECT SUM(od.number) as number ,od.name as name FROM order_detail od INNER JOIN orders o
        ON o.id = od.order_id
        <where>
            o.status = 5
            <if test="begin != null">
                    and order_time &gt; #{begin}
            </if>
            <if test="end != null">
                    and order_time &lt; #{end}
            </if>
        </where>
        GROUP BY od.name ORDER BY SUM(od.number) DESC
        LIMIT 0 , 10
    </select>


    <update id="update" parameterType="com.sky.entity.Orders">
        update orders
        <set>
            <if test="cancelReason != null and cancelReason!='' ">
                cancel_reason=#{cancelReason},
            </if>
            <if test="rejectionReason != null and rejectionReason!='' ">
                rejection_reason=#{rejectionReason},
            </if>
            <if test="cancelTime != null">
                cancel_time=#{cancelTime},
            </if>
            <if test="payStatus != null">
                pay_status=#{payStatus},
            </if>
            <if test="payMethod != null">
                pay_method=#{payMethod},
            </if>
            <if test="checkoutTime != null">
                checkout_time=#{checkoutTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime}
            </if>
        </set>
        where id = #{id}
    </update>

</mapper>